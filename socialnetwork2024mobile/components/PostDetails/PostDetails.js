import { View, Text, TextInput, TouchableOpacity, ScrollView, Image, useWindowDimensions } from 'react-native';
import PostDetailsStyles from '../../components/PostDetails/PostDetailsStyles';
import { useEffect, useState } from 'react';
import { ActivityIndicator } from 'react-native-paper';
import APIs, { authApis, endpoints } from '../../configs/APIs';
import { FontAwesome } from '@expo/vector-icons';
import RenderHTML from 'react-native-render-html';
import moment from 'moment';

export default PostDetail = ({ route }) => {
    const postId = route.params?.postId;
    const { width: contentWidth } = useWindowDimensions();
    const [postDetails, setPostDetails] = useState(null);
    const [comments, setComments] = useState(null);
    const [contents, setContents] = useState(null);

    const loadPostDetails = async () => {
        let res = await APIs.get(endpoints['post-details'](postId));
        console.info(res.data);
        setPostDetails(res.data);
    };

    const loadComments = async () => {
        let res = await APIs.get(endpoints['comments'](postId));
        console.info(res.data);
        setComments(res.data);
    };

    const addComments = async () =>{
        try{
            let api = await authApis(); 
            let res = await api.post(endpoints['add-comment'](postId), {
                'content': contents
            });
            setComments(current => [res.data, ...current]);
            console.info(res.data); 
        }catch(ex){
            console.error(ex);
        }
    };

    const formatDate = (dateString = '') => {
        if (!dateString) return 'N/A';
        const date = new Date(dateString);
        const day = String(date.getDate()).padStart(2, '0');       // L·∫•y ng√†y, th√™m s·ªë 0 n·∫øu c·∫ßn
        const month = String(date.getMonth() + 1).padStart(2, '0'); // L·∫•y th√°ng (t√≠nh t·ª´ 0)
        const year = date.getFullYear();                            // L·∫•y nƒÉm
        return `${day}/${month}/${year}`;                            // ƒê·ªãnh d·∫°ng theo ki·ªÉu dd/MM/yyyy
    };

    useEffect(() => {
        loadPostDetails();
        loadComments();
    }, [postId]);

    return (
        <ScrollView style={PostDetailsStyles.content}>
            {postDetails === null ? <ActivityIndicator /> : <>
                <View style={PostDetailsStyles.post}>
                    <View style={PostDetailsStyles.HeaderRow}>
                        <Image style={PostDetailsStyles.postAvatar} source={{ uri: postDetails.user.avatar || 'https://res.cloudinary.com/djlyy5s5e/image/upload/v1738552067/default_avatar_user_jjl7xy.png' }} />
                        <View style={PostDetailsStyles.HeaderCol}>
                            <Text style={PostDetailsStyles.postAuthor}>{postDetails.user.first_name || "null"} {postDetails.user.last_name || "null"}</Text>
                            <Text style={PostDetailsStyles.postDate}>Ng√†y ƒëƒÉng t·∫£i: {formatDate(postDetails.created_date)}</Text>
                        </View>
                        <View style={{ flexDirection: 'row', alignItems: 'center' }}>
                            <FontAwesome name="star" size={20} color="#2e3192" style={{ marginLeft: 70, marginRight: 8 }} />
                            <Text style={PostDetailsStyles.postCategory}>{postDetails.topic.category.name}</Text>
                        </View>
                    </View>
                    <Text style={PostDetailsStyles.postTitle}>{postDetails.title}</Text>
                    <Text style={PostDetailsStyles.postContent}>
                        <RenderHTML contentWidth={contentWidth} source={{ 'html': postDetails.content }} />
                    </Text>
                    <Text style={PostDetailsStyles.postTag}>#{postDetails.topic.name}</Text>
                    <Image style={PostDetailsStyles.postImage} source={{ uri: postDetails.image }} />
                    <View style={PostDetailsStyles.postFooter}>
                        <Text style={PostDetailsStyles.postStats}>{postDetails.reaction_counts.like} like, {postDetails.reaction_counts.haha} haha, {postDetails.reaction_counts.love} love</Text>
                        <Text style={PostDetailsStyles.postComments}>2 b√¨nh lu·∫≠n</Text>
                    </View>
                    <View style={PostDetailsStyles.actions}>
                        <TouchableOpacity>
                            <Text style={PostDetailsStyles.actionButton}>üëç Th√≠ch</Text>
                        </TouchableOpacity>
                    </View>
                </View>

                {/* My Comment */}
                <View style={PostDetailsStyles.myComment}>
                    <TextInput value={contents} onChangeText={t => setContents(t)} style={PostDetailsStyles.MyContent} placeholder="Nh·∫≠p b√¨nh lu·∫≠n" />
                    <TouchableOpacity onPress={addComments}>
                        <Text style={PostDetailsStyles.saveComment}>L∆∞u</Text>
                    </TouchableOpacity>
                </View>

                {/* Comments */}
                {comments === null ? <ActivityIndicator /> : <>
                    {comments.map(c => <View style={PostDetailsStyles.comment}>
                        <View style={PostDetailsStyles.HeaderRow}>
                            <Image
                                style={PostDetailsStyles.commentAvatar}
                                source={{ uri: c.user.avatar || 'https://res.cloudinary.com/djlyy5s5e/image/upload/v1738552067/default_avatar_user_jjl7xy.png' }}
                            />
                            <View style={PostDetailsStyles.HeaderCol}>
                                <Text style={PostDetailsStyles.commentAuthor}>{c.user.first_name || "null"} {c.user.last_name || "null"}</Text>
                                <Text style={PostDetailsStyles.commentDate}>{moment(c.created_date).fromNow()}</Text>
                            </View>
                        </View>
                        <Text style={PostDetailsStyles.commentContent}>{c.content}</Text>
                    </View>
                    )}
                </>}
            </>}
        </ScrollView>
    );
    // return (
    //     <View style={PostDetailsStyles.container}>
    //         {/* Header */}
    //         <View style={PostDetailsStyles.header}>
    //             <Text style={PostDetailsStyles.headerTitle}>Social Network</Text>
    //             <TextInput style={PostDetailsStyles.searchBar} placeholder="Search" />
    //         </View>

    //         {/* Content */}
    //         <ScrollView contentContainerStyle={PostDetailsStyles.content}>
    //             {/* Post */}
    //             <View style={PostDetailsStyles.post}>
    //                 <View style={PostDetailsStyles.HeaderRow}>
    //                     <Image style={PostDetailsStyles.postAvatar} source={{uri: 'https://gamek.mediacdn.vn/133514250583805952/2020/7/11/narutossagemode-15944657133061535033027.png'}} />
    //                     <View style={PostDetailsStyles.HeaderCol}>
    //                         <Text style={PostDetailsStyles.postAuthor}>C·ª±u SV A</Text>
    //                         <Text style={PostDetailsStyles.postDate}>Ng√†y ƒëƒÉng t·∫£i: 20/01/2025</Text>
    //                     </View>
    //                     <Text style={PostDetailsStyles.postCategory}>Trao ƒë·ªïi</Text>
    //                 </View>
    //                 <Text style={PostDetailsStyles.postTitle}>H·ªçc l·∫≠p tr√¨nh n√™n b·∫Øt ƒë·∫ßu t·ª´ ƒë√¢u?</Text>
    //                 <Text style={PostDetailsStyles.postContent}>Trong th·ªùi gian g·∫ßn ƒë√¢y em ƒëang b·ªã ph√¢n v√¢n kh√¥ng bi·∫øt n√™n b·∫Øt ƒë·∫ßu h·ªçc l·∫≠p tr√¨nh t·ª´ ƒë√¢u? V√† g·∫∑p ph·∫£i nh·ªØng tr·ªü ng·∫°i kh√≥ khƒÉn g√¨? M·ªçi ng∆∞·ªùi c√≥ th·ªÉ cho em xin v√†i l·ªùi khuy√™n ƒë∆∞·ª£c kh√¥ng ·∫°?</Text>
    //                 <Text style={PostDetailsStyles.postTag}>#H·ªèi & ƒê√°p</Text>
    //                 <Image style={PostDetailsStyles.postImage} source={{uri: 'https://gamek.mediacdn.vn/133514250583805952/2020/7/11/narutossagemode-15944657133061535033027.png'}} />
    //                 <View style={PostDetailsStyles.postFooter}>
    //                 <Text style={PostDetailsStyles.postStats}>10 like, 22 haha, 1 love</Text>
    //                 <Text style={PostDetailsStyles.postComments}>2 b√¨nh lu·∫≠n</Text>
    //                 </View>
    //                 <View style={PostDetailsStyles.actions}>
    //                 <TouchableOpacity>
    //                     <Text style={PostDetailsStyles.actionButton}>üëç Th√≠ch</Text>
    //                 </TouchableOpacity>
    //                 </View>
    //             </View>

    //             {/* My Comment */}
    //             <View style={PostDetailsStyles.myComment}>
    //                 <TextInput style={PostDetailsStyles.MyContent} placeholder="Nh·∫≠p b√¨nh lu·∫≠n" />
    //                 <TouchableOpacity>
    //                     <Text style={PostDetailsStyles.saveComment}>L∆∞u</Text>
    //                 </TouchableOpacity>
    //             </View>

    //             {/* Comments */}
    //             <View style={PostDetailsStyles.comment}>
    //                 <View style={PostDetailsStyles.HeaderRow}>
    //                     <Image style={PostDetailsStyles.commentAvatar} source={{uri: 'https://gamek.mediacdn.vn/133514250583805952/2020/7/11/narutossagemode-15944657133061535033027.png'}} />
    //                     <View style={PostDetailsStyles.HeaderCol}>
    //                         <Text style={PostDetailsStyles.commentAuthor}>C·ª±u SV A</Text>
    //                         <Text style={PostDetailsStyles.commentDate}>Ng√†y ƒëƒÉng t·∫£i: 20/01/2025</Text>
    //                     </View>
    //                 </View>
    //                 <Text style={PostDetailsStyles.commentContent}>H·ªçc l·∫≠p tr√¨nh n√™n b·∫Øt ƒë·∫ßu t·ª´ ƒë√¢u?</Text>
    //             </View>
    //         </ScrollView>
    //     </View>
    // );
};